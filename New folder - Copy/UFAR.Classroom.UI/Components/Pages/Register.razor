@page "/register"
@inject IUserService UserService
@using UFAR.Classroom.Entities
@using UFAR.Classroom.Services
@using UFAR.Classroom.Models
@rendermode InteractiveServer

<h3>Register</h3>

<EditForm Model="UserRegistration" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
        <InputText @bind-Value="UserRegistration.Name" />
    </div>
    <div>
        <label>Surname:</label>
        <InputText @bind-Value="UserRegistration.Surname" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="UserRegistration.Email" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="UserRegistration.Password" type="password" />
    </div>
    <button type="submit">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(Message))
{
    <p>@Message</p>
}

@code {
    private UserRegistrationDto UserRegistration = new UserRegistrationDto();
    private string Message;

    private async Task HandleRegistration()
    {
        try
        {
            var user = new User
                {
                    Name = UserRegistration.Name,
                    Surname = UserRegistration.Surname,
                    Email = UserRegistration.Email
                };

            await UserService.RegisterAsync(user, UserRegistration.Password);
            Message = "User registered successfully";
        }
        catch (Exception ex)
        {
            Message = ex.Message;
        }
    }
}
